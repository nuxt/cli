name: size-comment

on:
  workflow_run:
    workflows: [size]
    types: [completed]

permissions:
  pull-requests: write
  actions: read

jobs:
  comment:
    # Only run if the build workflow succeeded
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: üîç Get PR number
        id: pr
        uses: actions/github-script@v8
        with:
          script: |
            const pulls = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.payload.workflow_run.head_sha,
            });

            if (pulls.data.length > 0) {
              return pulls.data[0].number;
            }
            return null;

      - name: ‚è¨ Download artifacts from workflow run
        if: steps.pr.outputs.result
        uses: actions/download-artifact@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        if: steps.pr.outputs.result
        with:
          sparse-checkout: scripts/parse-sizes.ts
          sparse-checkout-cone-mode: false
      
      - name: üìä Generate size comparison
        if: steps.pr.outputs.result
        id: sizes
        run: |
          COMMENT=$(node scripts/parse-sizes.ts nuxi nuxt-cli create-nuxt)
          echo "comment<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: üí¨ Post or update comment
        if: steps.pr.outputs.result
        uses: actions/github-script@v8
        with:
          script: |
            const prNumber = ${{ steps.pr.outputs.result }};
            const commentBody = `${{ steps.sizes.outputs.comment }}`;

            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Bundle Size Comparison')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
