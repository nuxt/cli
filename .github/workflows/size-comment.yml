name: size-comment

on:
  workflow_run:
    workflows: [size]
    types: [completed]

permissions:
  pull-requests: write
  actions: read

jobs:
  comment:
    # Only run if the build workflow succeeded
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Get PR number
        id: pr
        uses: actions/github-script@v8
        with:
          script: |
            const pulls = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.payload.workflow_run.head_sha,
            });

            if (pulls.data.length > 0) {
              return pulls.data[0].number;
            }
            return null;

      - name: ⏬ Download artifacts from workflow run
        if: steps.pr.outputs.result
        uses: actions/download-artifact@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: 📊 Compare and comment on sizes
        if: steps.pr.outputs.result
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const prNumber = ${{ steps.pr.outputs.result }};

            if (!prNumber) {
              console.log('No PR number found, skipping comment');
              return;
            }

            const packages = ['nuxi', 'nuxt-cli', 'create-nuxt'];
            let commentBody = '## 📦 Bundle Size Comparison\n\n';

            for (const pkg of packages) {
              try {
                const headStats = JSON.parse(fs.readFileSync(`./head-stats/${pkg}/stats.json`, 'utf8'));
                const baseStats = JSON.parse(fs.readFileSync(`./base-stats/${pkg}/stats.json`, 'utf8'));

                // Simple size comparison - adjust based on your stats.json structure
                const headSize = headStats.bundleSize || headStats.size || 0;
                const baseSize = baseStats.bundleSize || baseStats.size || 0;
                const diff = headSize - baseSize;
                const diffPercent = baseSize ? ((diff / baseSize) * 100).toFixed(2) : 0;

                const icon = diff > 0 ? '📈' : diff < 0 ? '📉' : '➡️';
                const sign = diff > 0 ? '+' : '';

                commentBody += `### ${icon} ${pkg}\n`;
                commentBody += `- Base: ${(baseSize / 1024).toFixed(2)} KB\n`;
                commentBody += `- Head: ${(headSize / 1024).toFixed(2)} KB\n`;
                commentBody += `- Diff: ${sign}${(diff / 1024).toFixed(2)} KB (${sign}${diffPercent}%)\n\n`;
              } catch (error) {
                console.log(`Error processing ${pkg}:`, error.message);
                commentBody += `### ⚠️ ${pkg}\nCould not compare sizes\n\n`;
              }
            }

            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Bundle Size Comparison')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
